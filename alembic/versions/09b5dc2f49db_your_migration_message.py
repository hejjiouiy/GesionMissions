"""your migration message

Revision ID: 09b5dc2f49db
Revises: 2082f227c9f9
Create Date: 2025-07-09 12:59:30.406793

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '09b5dc2f49db'
down_revision: Union[str, None] = '2082f227c9f9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('justificatif', schema='gestion_demande_achat')
    op.drop_table('ligne_demande', schema='gestion_demande_achat')
    op.drop_table('ligne_budgetaire', schema='gestion_demande_achat')
    op.drop_table('type_materiel', schema='gestion_demande_achat')
    op.drop_table('demande_achat', schema='gestion_demande_achat')
    op.drop_table('alembic_version')
    op.drop_table('materiel', schema='gestion_demande_achat')
    op.drop_table('validations', schema='gestion_demande_achat')
    op.add_column('financement', sa.Column('type', sa.Enum('PERSONNEL', 'PARRAINAGE', 'INTERNE', name='typefinancement', schema='gestion_missions'), nullable=False), schema='gestion_missions')
    op.add_column('missions', sa.Column('type', sa.Enum('NATIONALE', 'INTERNATIONALE', name='typemission', schema='gestion_missions'), nullable=True), schema='gestion_missions')
    op.add_column('ordres_mission', sa.Column('etat', sa.Enum('OUVERTE', 'EN_ATTENTE', 'VALIDEE_HIERARCHIQUEMENT', 'VALIDEE_BUDGETAIREMENT', 'APPROUVEE', 'CLOTUREE', 'REFUSEE', name='etatmission', schema='gestion_missions'), nullable=True), schema='gestion_missions')
    op.add_column('remboursement', sa.Column('etat', sa.Enum('OUVERTE', 'EN_ATTENTE', 'VALIDEE_HIERARCHIQUEMENT', 'VALIDEE_BUDGETAIREMENT', 'APPROUVEE', 'CLOTUREE', 'REFUSEE', name='etatmission', schema='gestion_missions'), nullable=True), schema='gestion_missions')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('remboursement', 'etat', schema='gestion_missions')
    op.drop_column('ordres_mission', 'etat', schema='gestion_missions')
    op.drop_column('missions', 'type', schema='gestion_missions')
    op.drop_column('financement', 'type', schema='gestion_missions')
    op.create_table('validations',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('typeValidation', postgresql.ENUM('SOUMISE', 'EN_ATTENTE_VALIDATION_BUDGETAIRE', 'VALIDE_BUDGETAIREMENT', 'EN_ATTENTE_VALIDATION_HIERARCHIQUE', 'VALIDEE_HIERARCHIQUEMENT', 'EN_COURS_TRAITEMENT_SERVICE_ACHAT', 'COMMANDE_EMISE', 'EN_COURS_LIVRAISON', 'LIVREE', 'ARCHIVEE', 'REFUSEE', name='etatvalidation'), autoincrement=False, nullable=True),
    sa.Column('date_validation', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('commentaire', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('demande_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['demande_id'], ['gestion_demande_achat.demande_achat.id'], name='validations_demande_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='validations_pkey'),
    schema='gestion_demande_achat'
    )
    op.create_table('materiel',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('categorie', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('designation', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('prix_unitaire_estime', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updatedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['categorie'], ['gestion_demande_achat.type_materiel.id'], name='materiel_categorie_fkey'),
    sa.PrimaryKeyConstraint('id', name='materiel_pkey'),
    schema='gestion_demande_achat',
    postgresql_ignore_search_path=False
    )
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name='alembic_version_pkc')
    )
    op.create_table('demande_achat',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('dateDemande', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('etatValidation', postgresql.ENUM('SOUMISE', 'EN_ATTENTE_VALIDATION_BUDGETAIRE', 'VALIDE_BUDGETAIREMENT', 'EN_ATTENTE_VALIDATION_HIERARCHIQUE', 'VALIDEE_HIERARCHIQUEMENT', 'EN_COURS_TRAITEMENT_SERVICE_ACHAT', 'COMMANDE_EMISE', 'EN_COURS_LIVRAISON', 'LIVREE', 'ARCHIVEE', 'REFUSEE', name='etatvalidation'), autoincrement=False, nullable=True),
    sa.Column('typeDemande', postgresql.ENUM('APPEL_OFFRE', 'DEMANDE_ACHAT', 'GRE_GRE', 'ACHAT_ENLIGNE', name='typedemande'), autoincrement=False, nullable=True),
    sa.Column('priorite', postgresql.ENUM('BASSE', 'NORMAL', 'HAUTE', 'CRITIQUE', name='priorite'), autoincrement=False, nullable=True),
    sa.Column('dateBesoin', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('ligne_budgetaire_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['ligne_budgetaire_id'], ['gestion_demande_achat.ligne_budgetaire.id'], name='demande_achat_ligne_budgetaire_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='demande_achat_pkey'),
    schema='gestion_demande_achat',
    postgresql_ignore_search_path=False
    )
    op.create_table('type_materiel',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('libelle', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('createdAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='type_materiel_pkey'),
    sa.UniqueConstraint('libelle', name='type_materiel_libelle_key'),
    schema='gestion_demande_achat',
    postgresql_ignore_search_path=False
    )
    op.create_table('ligne_budgetaire',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('codeLigne', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('nom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('exerciceBudgetaire', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='ligne_budgetaire_pkey'),
    schema='gestion_demande_achat',
    postgresql_ignore_search_path=False
    )
    op.create_table('ligne_demande',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('materiel_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('demande_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('quantite', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['demande_id'], ['gestion_demande_achat.demande_achat.id'], name='ligne_demande_demande_id_fkey'),
    sa.ForeignKeyConstraint(['materiel_id'], ['gestion_demande_achat.materiel.id'], name='ligne_demande_materiel_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ligne_demande_pkey'),
    schema='gestion_demande_achat'
    )
    op.create_table('justificatif',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.BYTEA(), autoincrement=False, nullable=False),
    sa.Column('createdAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modifiedAt', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('demande_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['demande_id'], ['gestion_demande_achat.demande_achat.id'], name='justificatif_demande_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='justificatif_pkey'),
    schema='gestion_demande_achat'
    )
    # ### end Alembic commands ###
